function Jacob = PSM_Jacobian(m, q)
    q_size = size(q);
    if q_size(2)~=1
        msg = sprintf('Please Set q to Vector');
        error(msg);
    elseif q_size(1)~=6
        msg = sprintf('Please length of q is %d, Please set to 6',q_size(1));
        error(msg);
    end
    q1 = q(1);
    q2 = q(2);
    q3 = q(3);
    q4 = q(4);
    q5 = q(5);
    q6 = q(6);
    l_RCC = m.l_RCC; 
    l_tool =m.l_tool;
    l_pitch2yaw = m.l_pitch2yaw;
    Jacob = [ l_RCC*cos(q1)*cos(q2) - l_tool*sin(q1) - q3*cos(q1)*cos(q2) - l_pitch2yaw*cos(q6)*sin(q1) + l_pitch2yaw*cos(q1)*cos(q2)*cos(q4)*cos(q5)*sin(q6) - l_pitch2yaw*cos(q1)*cos(q2)*sin(q4)*sin(q5)*sin(q6) - l_pitch2yaw*cos(q1)*cos(q4)*sin(q2)*sin(q5)*sin(q6) - l_pitch2yaw*cos(q1)*cos(q5)*sin(q2)*sin(q4)*sin(q6),  sin(q1)*((l_pitch2yaw*cos(q2 + q4 + q5 + q6))/2 - l_RCC*sin(q2) - (l_pitch2yaw*cos(q2 + q4 + q5 - q6))/2 + q3*sin(q2)), -cos(q2)*sin(q1),                     -l_pitch2yaw*sin(q2 + q4 + q5)*sin(q1)*sin(q6),                     -l_pitch2yaw*sin(q2 + q4 + q5)*sin(q1)*sin(q6), l_pitch2yaw*cos(q2)*cos(q4)*cos(q5)*cos(q6)*sin(q1) - l_pitch2yaw*cos(q1)*sin(q6) - l_pitch2yaw*cos(q2)*cos(q6)*sin(q1)*sin(q4)*sin(q5) - l_pitch2yaw*cos(q4)*cos(q6)*sin(q1)*sin(q2)*sin(q5) - l_pitch2yaw*cos(q5)*cos(q6)*sin(q1)*sin(q2)*sin(q4)
 l_tool*cos(q1) + l_pitch2yaw*cos(q1)*cos(q6) + l_RCC*cos(q2)*sin(q1) - q3*cos(q2)*sin(q1) + l_pitch2yaw*cos(q2)*cos(q4)*cos(q5)*sin(q1)*sin(q6) - l_pitch2yaw*cos(q2)*sin(q1)*sin(q4)*sin(q5)*sin(q6) - l_pitch2yaw*cos(q4)*sin(q1)*sin(q2)*sin(q5)*sin(q6) - l_pitch2yaw*cos(q5)*sin(q1)*sin(q2)*sin(q4)*sin(q6), -cos(q1)*((l_pitch2yaw*cos(q2 + q4 + q5 + q6))/2 - l_RCC*sin(q2) - (l_pitch2yaw*cos(q2 + q4 + q5 - q6))/2 + q3*sin(q2)),  cos(q1)*cos(q2),                      l_pitch2yaw*sin(q2 + q4 + q5)*cos(q1)*sin(q6),                      l_pitch2yaw*sin(q2 + q4 + q5)*cos(q1)*sin(q6), l_pitch2yaw*cos(q1)*cos(q2)*cos(q6)*sin(q4)*sin(q5) - l_pitch2yaw*sin(q1)*sin(q6) + l_pitch2yaw*cos(q1)*cos(q4)*cos(q6)*sin(q2)*sin(q5) + l_pitch2yaw*cos(q1)*cos(q5)*cos(q6)*sin(q2)*sin(q4) - l_pitch2yaw*cos(q1)*cos(q2)*cos(q4)*cos(q5)*cos(q6)
                                                                                                                                                                                                                                                                                                                 0,            q3*cos(q2) - l_RCC*cos(q2) - (l_pitch2yaw*sin(q2 + q4 + q5 + q6))/2 + (l_pitch2yaw*sin(q2 + q4 + q5 - q6))/2,          sin(q2), -(l_pitch2yaw*(sin(q2 + q4 + q5 + q6) - sin(q2 + q4 + q5 - q6)))/2, -(l_pitch2yaw*(sin(q2 + q4 + q5 + q6) - sin(q2 + q4 + q5 - q6)))/2,                                                                                                                                                                                  -l_pitch2yaw*(sin(q2 + q4 + q5 + q6)/2 + sin(q2 + q4 + q5 - q6)/2)
                                                                                                                                                                                                                                                                                                                 0,                                                                                                                 cos(q1), -cos(q2)*sin(q1),                                                                  0,                                                            cos(q1),                                                                                                                                                                                                 cos(q1 + q2 + q4 + q5)/2 - cos(q2 - q1 + q4 + q5)/2
                                                                                                                                                                                                                                                                                                                 0,                                                                                                                 sin(q1),  cos(q1)*cos(q2),                                                                  0,                                                            sin(q1),                                                                                                                                                                                                 sin(q1 + q2 + q4 + q5)/2 + sin(q2 - q1 + q4 + q5)/2
                                                                                                                                                                                                                                                                                                                 1,                                                                                                                       0,          sin(q2),                                                                  1,                                                                  0,                                                                                                                                                                                                                                  -cos(q2 + q4 + q5)];
 
end